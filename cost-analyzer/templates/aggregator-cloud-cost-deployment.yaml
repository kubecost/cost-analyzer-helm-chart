{{- if eq (include "aggregator.deployMethod" .) "statefulset" }}

{{/*
  A cloud integration secret is required for cloud cost to function as a dedicated pod.
*/}}
{{- if or (.Values.kubecostProductConfigs).cloudIntegrationSecret (.Values.kubecostProductConfigs).cloudIntegrationJSON ((.Values.kubecostProductConfigs).athenaBucketName) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cloudCost.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{ include "cloudCost.commonLabels" . | nindent 4 }}
    {{- with .Values.global.additionalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "cloudCost.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloud-cost
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: cloud-cost
        {{- with .Values.global.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.global.podAnnotations}}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Always
      serviceAccountName: {{ template "cloudCost.serviceAccountName" . }}
      volumes:
        {{- if .Values.kubecostModel.etlBucketConfigSecret }}
        - name: etl-bucket-config
          secret:
            defaultMode: 420
            secretName: {{ .Values.kubecostModel.etlBucketConfigSecret }}
        {{- end }}
        {{- if .Values.kubecostModel.federatedStorageConfigSecret }}
        - name: federated-storage-config
          secret:
            defaultMode: 420
            secretName: {{ .Values.kubecostModel.federatedStorageConfigSecret }}
        {{- end }}
        {{- if .Values.kubecostProductConfigs.cloudIntegrationSecret }}
        - name: cloud-integration
          secret:
            secretName: {{ .Values.kubecostProductConfigs.cloudIntegrationSecret }}
            items:
              - key: cloud-integration.json
                path: cloud-integration.json
        {{- else if or .Values.kubecostProductConfigs.cloudIntegrationJSON ((.Values.kubecostProductConfigs).athenaProjectID) }}
        - name: cloud-integration
          secret:
            secretName: cloud-integration
            items:
              - key: cloud-integration.json
                path: cloud-integration.json
        {{- end }}
        {{/* Titled persistent-configs to be compatible with single-pod install.
        All data stored here is ephemeral, and does not require a PV. */}}
        - name: persistent-configs
          emptyDir: {}
      containers:
        {{- include "aggregator.cloudCost.containerTemplate" . | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
      {{- if .Values.kubecostAggregator.priority }}
      {{- if .Values.kubecostAggregator.priority.enabled }}
      {{- if .Values.kubecostAggregator.priority.name }}
      priorityClassName: {{ .Values.kubecostAggregator.priority.name }}
      {{- else }}
      priorityClassName: {{ template "cost-analyzer.fullname" . }}-aggregator-priority
      {{- end }}
      {{- end }}
      {{- end }}
      {{- with .Values.kubecostAggregator.cloudCost.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubecostAggregator.cloudCost.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubecostAggregator.cloudCost.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}