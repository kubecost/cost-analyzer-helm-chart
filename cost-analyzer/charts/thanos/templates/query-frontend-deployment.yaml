{{ if .Values.global.thanos.enabled }}
{{ if .Values.queryFrontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.componentname" (list $ "query-frontend") }}
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: query-frontend
{{ with .Values.queryFrontend.deploymentLabels }}{{ toYaml . | indent 4 }}{{ end }}
  {{- with .Values.queryFrontend.deploymentAnnotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if not .Values.queryFrontend.autoscaling.enabled  }}
  replicas: {{ .Values.queryFrontend.replicaCount | default 1 }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: query-frontend
{{ with .Values.queryFrontend.deploymentMatchLabels }}{{ toYaml . | indent 6 }}{{ end }}
{{ with .Values.queryFrontend.deploymentStrategy }}
  strategy: {{ toYaml . | nindent 4 }}
{{ end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: query-frontend
{{ with  .Values.queryFrontend.labels }}{{ toYaml . | indent 8 }}{{ end }}
      {{- with  .Values.queryFrontend.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.queryFrontend.metrics.annotations.enabled  }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.queryFrontend.http.port }}"
      {{- end }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
       {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
      containers:
      - name: thanos-query-frontend
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - "query-frontend"
        - "--log.level={{ .Values.queryFrontend.logLevel }}"
        - "--http-address=0.0.0.0:{{ .Values.queryFrontend.http.port }}"
        - "--query-frontend.downstream-url=http://{{ include "thanos.componentname" (list $ "query") }}-http.{{ .Release.Namespace }}:{{ .Values.query.http.port }}"
        - "--query-range.split-interval={{ .Values.queryFrontend.splitInterval }}"
        - "--query-range.max-retries-per-request={{ .Values.queryFrontend.maxRetriesPerRequest }}"
        - "--query-range.max-query-length={{ .Values.queryFrontend.maxQueryLength }}"
        - "--query-range.max-query-parallelism={{ .Values.queryFrontend.maxQueryParallelism }}"
        - "--query-range.response-cache-max-freshness={{ .Values.queryFrontend.responseCacheMaxFreshness }}"
        {{- if .Values.queryFrontend.downstreamTripper.enabled }}
        {{- with .Values.queryFrontend.downstreamTripper }}
        - |-
          --query-frontend.downstream-tripper-config=
            idle_conn_timeout: {{ quote .idleConnectionTimeout }}
            response_header_timeout: {{ quote .responseHeaderTimeout }}
            tls_handshake_timeout: {{ quote .tlsHandshakeTimeout }}
            expect_continue_timeout: {{ quote .expectContinueTimeout }}
            max_idle_conns: {{ .maxIdleConnections }}
            max_idle_conns_per_host: {{ .maxIdleConnectionsPerHost }}
            max_conns_per_host: {{ .maxConnectionsPerHost }}
        {{- end }}
        {{- else if .Values.queryFrontend.downstreamTripperConfigFile }}
          - "--query-frontend.downstream-tripper-config-file={{ .Values.queryFrontend.downstreamTripperConfigFile }}"
        {{- else if .Values.queryFrontend.downstreamTripperConfig }}
          - |-
          --query-frontend.downstream-tripper-config={{ toYaml .Values.queryFrontend.downstreamTripperConfig | nindent 12 }}
        {{- end }}
        {{- if .Values.queryFrontend.responseCache.enabled }}
        {{- with .Values.queryFrontend.responseCache }}
        - |-
          --query-range.response-cache-config=
            config:
              max_size: {{ quote .maxSize }}
              max_size_items: {{ .maxSizeItems }}
              validity: {{ quote .validity }}
            type: "in-memory"
        {{- end }}
        {{- else if .Values.queryFrontend.responseCacheConfigFile }}
        - "--query-range.response-cache-config-file={{ .Values.queryFrontend.responseCacheConfigFile }}"
        {{- else if .Values.queryFrontend.responseCacheConfig }}
        - |-
          --query-range.response-cache-config={{ toYaml .Values.queryFrontend.responseCacheConfig | nindent 12 }}
        {{- end }}
        {{- if .Values.queryFrontend.compressResponses }}
        - "--query-frontend.compress-responses"
        {{- end }}
        {{- if .Values.queryFrontend.partialResponse }}
        - "--query-range.partial-response"
        {{- end }}
        {{- if .Values.queryFrontend.extraArgs }}
        {{ toYaml .Values.queryFrontend.extraArgs | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.queryFrontend.http.port }}
        resources:
          {{ toYaml .Values.queryFrontend.resources | nindent 10 }}
        env:
          {{- toYaml .Values.queryFrontend.extraEnv | nindent 10 }}
        volumeMounts:
        {{- if .Values.queryFrontend.certSecretName }}
        - mountPath: /etc/certs
          name: {{ .Values.queryFrontend.certSecretName }}
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
      volumes:
      {{- if .Values.queryFrontend.certSecretName }}
      - name: {{ .Values.queryFrontend.certSecretName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.queryFrontend.certSecretName }}
      {{- end }}
      {{- with .Values.queryFrontend.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with  .Values.queryFrontend.serviceAccount }}
      serviceAccountName: "{{ . }}"
      {{- end }}
{{ end }}
{{ end }}
