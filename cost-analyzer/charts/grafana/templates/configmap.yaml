{{ if .Values.global.grafana.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "grafana.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "grafana.name" . }}
    chart: {{ template "grafana.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
{{- if .Values.plugins }}
  plugins: {{ join "," .Values.plugins }}
{{- end }}
  grafana.ini: |
{{- range $key, $value := index .Values "grafana.ini" }}
    [{{ $key }}]
    {{- range $elem, $elemVal := $value }}
    {{ $elem }} = {{ $elemVal }}
    {{- end }}
{{- end }}

{{- if .Values.datasources }}
  {{- range $key, $value := .Values.datasources }}
  {{ $key }}: |
{{ toYaml $value | trim | indent 4 }}
  {{- end -}}
{{- end }}
{{- if not .Values.datasources }}
  datasources.yaml: |
    apiVersion: 1
    datasources:
{{- if .Values.global.thanos.enabled }}
    - access: proxy
      isDefault: true
      name: Thanos
      type: prometheus
      url:  http://{{ .Release.Name }}-thanos-query-frontend-http.{{ .Release.Namespace }}:10902
      jsonData:
        timeInterval: 1m
        prometheusType: Thanos
        prometheusVersion: 0.29.0
        httpMethod: POST
{{- else if .Values.global.prometheus.enabled }}
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://{{ template "cost-analyzer.prometheus.server.name" . }}.{{ .Release.Namespace }}.svc
      jsonData:
        httpMethod: POST
        prometheusType: Prometheus
        prometheusVersion: 2.35.0
        timeInterval: 1m
{{- else }}
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: {{ .Values.global.prometheus.fqdn }}
      jsonData:
        httpMethod: POST
        prometheusType: Prometheus
        prometheusVersion: 2.35.0
        timeInterval: 1m
{{- end -}}
{{- end }}
{{- if .Values.dashboardProviders }}
  {{- range $key, $value := .Values.dashboardProviders }}
  {{ $key }}: |
{{ toYaml $value | indent 4 }}
  {{- end -}}
{{- end -}}

{{- if .Values.dashboards  }}
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
    {{- if .Values.dashboardProviders }}
      {{- range $key, $value := .Values.dashboardProviders }}
        {{- range $value.providers }}
    mkdir -p {{ .options.path }}
        {{- end }}
      {{- end }}
    {{- end }}

  {{- range $provider, $dashboards := .Values.dashboards }}
    {{- range $key, $value := $dashboards }}
      {{- if (or (hasKey $value "gnetId") (hasKey $value "url")) }}
    curl -sk \
    --connect-timeout 60 \
    --max-time 60 \
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \
    {{- if $value.url -}}{{ $value.url }}{{- else -}} https://grafana.com/api/dashboards/{{ $value.gnetId }}/revisions/{{- if $value.revision -}}{{ $value.revision }}{{- else -}}1{{- end -}}/download{{- end -}}{{ if $value.datasource }}| sed 's|\"datasource\":[^,]*|\"datasource\": \"{{ $value.datasource }}\"|g'{{ end }} \
    > /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{ end }}